version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: webapp_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-securepassword123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - infosonik-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d webapp_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  app:
    build: .
    env_file:
      - .env.prod
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 60s
    depends_on:
      db:
        condition: service_healthy
    networks:
      - infosonik-network
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web-app.rule=Host(`infsnk-app-01.tawfiqulbari.work`)"
      - "traefik.http.routers.web-app.entrypoints=websecure"
      - "traefik.http.routers.web-app.tls.certresolver=letsencrypt"
      - "traefik.http.services.web-app.loadbalancer.server.port=8000"
      - "traefik.http.routers.web-app-web.rule=Host(`infsnk-app-01.tawfiqulbari.work`)"
      - "traefik.http.routers.web-app-web.entrypoints=web"
      - "traefik.http.routers.web-app-web.middlewares=redirect-to-https@file"
      - "traefik.http.routers.web-app-web.service=web-app"
      - "traefik.http.routers.localhost.rule=Host(`localhost`)"
      - "traefik.http.routers.localhost.entrypoints=web"
      - "traefik.http.routers.localhost.service=web-app"

volumes:
  postgres_data:

networks:
  infosonik-network:
    external: true
